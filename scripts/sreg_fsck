#!/bin/bash
source "$(which ember_bash_setup)" &> /dev/null

# Verify that all entries in the stream database can be read correctly

[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"
function finish() {
  if [ -e "$crystalWorkdir/$fsckId" ]; then
    rm -r "$crystalWorkdir/$fsckId"
  fi
}
trap 'error-die "A fatal error was reported on ${BASH_SOURCE} line ${LINENO}."' ERR

echo "Counting items..."
crystalWorkdir="$(crystallize-getconf 'WorkDirectory')"
fsckId="sreg_fsck-$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")"
mkdir -p "$crystalWorkdir/$fsckId"
fsckStatusFile="$crystalWorkdir/$fsckId/.sreg_fsck.status"
dbDir=/Ember\ Library/Futuramerlin\ Projects/Data/Stream\ Registry
echo "$(find "$dbDir" -type f -not -path "$dbDir/Failed Fsck/*" -not -path "$dbDir/LocalStore/*" -not -path "$dbDir/Packs/*" -printf '.' | wc -c)" > "$fsckStatusFile"
find "$dbDir" -type f -not -path "$dbDir/Failed Fsck/*" -not -path "$dbDir/LocalStore/*" -not -path "$dbDir/Packs/*" -exec sreg_verify_entry 1 {} "$fsckStatusFile" \;
echo "Done all items."
finish
trap finish EXIT
