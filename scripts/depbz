#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

[[ -e "/tmp/depbzHome" ]] && die "depbz is already running! Only one depbz instance can be running at a time."

readlink -f ~ > "/tmp/depbzHome"
((EUID)) && exec sudo -- "$0" "$@"
depbzHome="$(</tmp/depbzHome)"

finish() {
    [[ -e "/tmp/depbzHome" ]] && rm "/tmp/depbzHome"
}
trap finish EXIT

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."' ERR

shopt -s extglob

useCustomPassphrase="false"
crystallizePassphrase=""
if [[ "$1" == "--passphrase" ]]; then
    useCustomPassphrase="true"
    shift
    crystallizePassphrase="$1"
    shift
fi

date="$1";
encrypted=""
if [[ -e "./Packed-$date.pbze" && ! -d "./Packed-$date.pbze" ]]; then
    encrypted="true"
else
    if [[ -e "./Packed-$date.pbz" && ! -d "./Packed-$date.pbz" ]]; then
        encrypted="false"
    else
        die "Could not find specified date (pbz or pbze file). Please make sure you have cded to the directory it's in."
    fi
fi
if [[ "$encrypted" == "true" ]]; then
    [[ -e "./Packed-$date.pdxe" && ! -d "./Packed-$date.pdxe" ]] || die "Could not find encrypted bill of materials (pdxe) file."
    [[ -e "./Packed-$date.pmbze" && ! -d "./Packed-$date.pmbze" ]] || die "Could not find encrypted pmbz (pmbze) file."
    if [[ "$useCustomPassphrase" == "false" ]]; then
        passphraseLocation="$depbzHome/.pbz"
        [[ -e "$passphraseLocation" && ! -d "$passphraseLocation" ]] || die "Could not find passphrase file, expected to be at $passphraseLocation. Please create it, or specify a passphrase using the --passphrase option."
        crystallizePassphrase="$(<~/.pbz)"
    fi
    
    os.system('mv -v ./Packed-'+date+'.pbze .tmp-'+date+'.gpg')
    os.system('gpg --yes --batch --passphrase-file ~/.pbz ./.tmp-'+date+'.gpg')
    os.system('rm -v ./.tmp-'+date+'.gpg')
    os.system('mv -v ./Packed-'+date+'.pdxe .tmp-pdx-'+date+'.gpg')
    os.system('gpg --yes --batch --passphrase-file ~/.pbz ./.tmp-pdx-'+date+'.gpg')
    os.system('rm -v ./.tmp-pdx-'+date+'.gpg')
    os.system('mv -v ./.tmp-'+date+' ./.tmp-'+date+'.tbz2')
    os.system('mv -v ./.tmp-pdx-'+date+' ./Packed-'+date+'.pdx.bz2')
    os.system('mv -v ./Packed-'+date+'.pmbze .tmp-pmbz-'+date+'.gpg')
    os.system('gpg --yes --batch --passphrase-file ~/.pbz ./.tmp-pmbz-'+date+'.gpg')
    os.system('rm -v ./.tmp-pmbz-'+date+'.gpg')
    os.system('mv -v ./.tmp-pmbz-'+date+' ./.tmp-'+date+'.pmb.tbz2')
else:
    print 'pbz extract'
    os.system('mv -v ./Packed-'+date+'.pdx ./Packed-'+date+'.pdx.bz2')
    try:
        ak = open('./Packed-'+date+'.pdx','rb')
        ak.close()
    except:
        print "Could not find BOM."
        sys.exit()
    try:
        ak = open('./Packed-'+date+'.pmbze','rb')
        ak.close()
    except:
        print "Could not find pmbze."
        sys.exit()
os.system('bunzip2 ./Packed-'+date+'.pdx.bz2')
os.system('tar -xvf ./.tmp-'+date+'.tbz2')
os.system('tar -xvf ./.tmp-'+date+'.pmb.tbz2')
time.sleep(1)
os.system('rm -v ./.tmp-'+date+'.tbz2')
os.system('rm -v ./.tmp-'+date+'.pmb.tbz2')
os.system('mv -v ./.tmp.Packed-'+date+'.pmb ./Packed-'+date+'.pmb')
