#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

((EUID)) && exec sudo -- "$0" "$@"
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."' ERR

if [[ "$1" == "--no-verify" ]]; then
    #echo "(Not verifying pointers.)"
    sregNoVerify=true
    shift
fi
#echo "$@"
if ! [[ -f "$1" ]]; then
    error-notify "Item must be a regular file."
    exit 1
fi
fsckStatusFile="$3"
if [[ -n "$fsckStatusFile" ]]; then
    numberExpected="$(<"$fsckStatusFile")"
    numberProcessedFile="$fsckStatusFile.done"
    if ! [[ -f "$numberProcessedFile" ]]; then
        numberProcessed="1"
    else
        numberProcessed="$(<"$numberProcessedFile")"
        numberProcessed=$(( numberProcessed + 1 ))
    fi
    echo "$numberProcessed" > "$numberProcessedFile"
    if [[ "$numberExpected" == "0" ]]; then
        numberExpected="-1"
    fi
    numberProcessedPercentage="$(printf "%.3f\n" "$(bc -l <<< "($numberProcessed / $numberExpected) * 100")")"
    echo "Copying item $1: #$numberProcessed of $numberExpected ($numberProcessedPercentage%)"
fi
# FIXME: This shellcheck directive is only needed for outdated shellcheck versions. Once CodeClimate's shellcheck gets updated (which probably means when Debian stable updates shellcheck), it can be removed.
# shellcheck disable=SC2034
destinationRootLength="$4"
# FIXME: This shellcheck directive is only needed for outdated shellcheck versions. Once CodeClimate's shellcheck gets updated (which probably means when Debian stable updates shellcheck), it can be removed.
# shellcheck disable=SC2034
targetLength=${#1}
#echo "$destinationRootLength - $targetLength"
destinationName="$2/${1:destinationRootLength:targetLength}"
#echo "$destinationName"
sourceChecksum="$(sha512sum < "$1" | awk '{print $1;}')"
if [[ -f "$destinationName" ]]; then
    pointerTypeSignature="$(head -c 36 "$destinationName")"
    destinationChecksum=""
    hasEncounteredError="0"
    if [[ "$pointerTypeSignature" == "760fa662-89cf-4ebd-9664-150b7637ddd4" ]]; then
        trap 'warn "A nonfatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."; hasEncounteredError="1"' ERR
        assumePointerDbEntryFileExists="true"
        if [[ "$sregNoVerify" == "true" ]]; then
            destinationChecksum="$(tail -c +38 "$destinationName" | head -c 129)"
            pointerDbEntryFile="${EmberLibrary:?}/Futuramerlin Projects/Data/Stream Registry/${destinationChecksum:0:1}/${destinationChecksum:1:1}/${destinationChecksum:2:1}/$destinationChecksum"
            if ! [[ -e "$pointerDbEntryFile" ]]; then
                assumePointerDbEntryFileExists="false"
            fi
        else
            destinationChecksum="$(tail -c +38 "$destinationName" | head -c 129)"
            sreg_read_stream < "$destinationName" > /dev/null || die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."
        fi
        if [[ "$destinationChecksum" == "$sourceChecksum" && "$hasEncounteredError" == "0" && "$assumePointerDbEntryFileExists" == "true" ]]; then
            # The file is already present, pointerized, and readable, so exit without doing anything.
            echo "(Nothing done for $1.)"
            exit 0
        else
            warn "(Destination pointer $destinationName did not match source checksum: the source file has probably been changed. Removing and recreating.)"
            # cat "$destinationName"
            rm "${destinationName:?}"
        fi
    fi
fi
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."' ERR
crystalWorkdir="$(crystallize-getconf WorkDirectory)"
streamId="sreg-$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")"
crystalSubdir="$crystalWorkdir/$streamId"
mkdir -p "$crystalSubdir"
rsync -a --checksum --no-i-r "$1" "$crystalSubdir/"
setVariableToCommandOutput "basename" "embasename" "$1"
fileToStash="$crystalSubdir/${basename:?}"
echo "Begun storing $fileToStash."
if [[ -f "$fileToStash" ]]; then
    sreg_store_stream --assume-checksum "$sourceChecksum" --verbose < "$fileToStash"
    printf '%s\n%s\n' "760fa662-89cf-4ebd-9664-150b7637ddd4" "$sourceChecksum" > "$fileToStash"
else
    die "Skipping item $fileToStash: not a regular file."
fi
echo "Done storing $fileToStash."
mkdir -p "$(dirname "$destinationName")"
rsync -a --checksum --no-i-r "$fileToStash" "$destinationName"
chmod a+r "$destinationName"
rm -r "${crystalSubdir:?}"
if [[ -e "${streamId:?}" ]]; then
    rm -r "${streamId:?}"
fi
