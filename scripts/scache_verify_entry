#!/bin/bash
# Accepts an integer and a pointer as an argument, and returns a success status if the data corresponding to the pointer can be read. If it fails, it moves the pointer that failed validation aside. The integer first argument is the number of times to retry if the retrieval fails.
set -e
set -x
[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"
# FIXME: The next line should not be necessary
source crystallize-bash_setup
numRetries="$1"
shift
knownHash="$(basename "$1")"
echo "Started verifying stream cache database entry $knownHash."
recoveredHash="$(scache_read_stream --disallow-hash-pointer < "$1" | sha512sum | awk '{print $1;}')"
if [[ "$knownHash" == "$recoveredHash" ]]; then
    echo "Verified stream cache database entry $knownHash."
    exit
fi
if [[ "$knownHash" != "$recoveredHash" ]]; then
    if [[ "$numRetries" == "0" ]]; then
        dbDir=/Ember\ Library/Futuramerlin\ Projects/Data/Stream\ Registry/Failed\ Fsck/
        mkdir -p "$dbDir"
        mv "$1" "$dbDir/"
        error-die "Error verifying stream cache database entry $knownHash! No retries left; giving up and marking entry as corrupted."
    else
        numRetries=$(( numRetries - 1 ))
        warn "Error verifying stream cache database entry $knownHash! Waiting 30 seconds and retrying $numRetries more times."
        sleep 30
        scache_verify_entry "$numRetries" "$1" || exit 1
        exit
    fi
fi
error-die "Internal error! This situation should never occur and almost certainly represents a bug in scache_verify_entry."
exit 1
