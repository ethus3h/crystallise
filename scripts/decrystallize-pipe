#!/bin/bash
# decrystallize-pipe

# See crystallize for requirements.

[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"

#Script should exit if any operation fails.
set -e

shopt -s extglob

crystalWorkdir=$(crystallize-getconf 'WorkDirectory')

while [ -f "$crystalWorkdir/decrystallize-pipe-in-use"]; do
    echo "Another pipe request is open; waiting..."
    sleep 1
done

#Remove URL
CrystalAddress="${1#https://archive.org/@(details|download)/}"
#Remove trailing path(s) from identifier
CrystalAddress="${CrystalAddress%%/*}"
if [ "$2" != "--no-trim-extensions" ]; then
    #Remove filename extensions
    CrystalAddress="${CrystalAddress%\.coal5*}"
fi

if [ "$CrystalAddress" == "" ]; then
    echo "Please specify a crystal address to unpack."
    exit 1
fi

CrystalLogID=$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")-$(python -c 'import uuid; print str(uuid.uuid4())')

crystallizePassphrase=$(crystallize-getconf 'Passphrase')
printf "%s" "$crystallizePassphrase" > "$crystalWorkdir/$CrystalLogID.tmp"

wget -O - -o /dev/null "https://archive.org/download/$CrystalID/$CrystalID.coal5" | gpg --yes --batch --passphrase-file "$crystalWorkdir/$CrystalLogID.tmp" - | unxz > "$crystalWorkdir/$CrystalLogID.tar"
