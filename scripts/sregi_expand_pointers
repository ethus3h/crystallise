#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null

((EUID)) && exec sudo -- "$0" "$@"
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."' ERR
#set -x

fsckStatusFile="$1"
shift

while [[ ! -z "$1" ]]; do
    fileToResolve="$1"

    if [[ -n "$fsckStatusFile" ]]; then
        numberExpected="$(<"$fsckStatusFile")"
        numberProcessedFile="$fsckStatusFile.done"
        if ! [[ -f "$numberProcessedFile" ]]; then
            numberProcessed="1"
        else
            numberProcessed="$(<"$numberProcessedFile")"
            numberProcessed=$(( numberProcessed + 1 ))
        fi
        echo "$numberProcessed" > "$numberProcessedFile"
        if [[ "$numberExpected" == "0" ]]; then
            numberExpected="-1"
        fi
        numberProcessedPercentage="$(printf "%.3f\n" "$(bc -l <<< "($numberProcessed / $numberExpected) * 100")")"
        echo "Resolving item $fileToResolve: #$numberProcessed of $numberExpected ($numberProcessedPercentage%)"
    fi

    if [[ -f "$fileToResolve" ]]; then
        # FIXME: This shellcheck directive is only needed for outdated shellcheck versions. Once CodeClimate's shellcheck gets updated (which probably means when Debian stable updates shellcheck), it can be removed.
        # shellcheck disable=SC2094
        tempFileName="$(crystallize-getconf WorkDirectory)/$(basename "$fsckStatusFile").expand.tmp"
        sreg_read_stream < "$fileToResolve" > "$tempFileName" || die "Reading $fileToResolve failed."
        mv "$tempFileName" "$fileToResolve" || die "Moving retrieved data for $fileToResolve into place failed."
    else
        if [[ -d "$fileToResolve" ]]; then
            find "$fileToResolve" -type f -exec sregi_expand_pointers "$fsckStatusFile" {} \;
        else
            warn "Skipping item $fileToResolve: not a regular file or directory."
        fi
    fi
    shift
done
