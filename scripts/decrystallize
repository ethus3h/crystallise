#!/bin/bash
# decrystallize
# Usage: decrystallize <crystal-address>

set -e
[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"

shopt -s extglob

#Remove URL
CrystalAddress="${1#https://archive.org/@(details|download)/}"
#Remove trailing path(s) from identifier
CrystalAddress="${CrystalAddress%%/*}"
CrystalAddress="${CrystalAddress%\.coal5*}"

if [ "$CrystalAddress" == "" ]; then
    echo "Please specify a crystal address to unpack."
    exit 1
fi

CrystalID="$CrystalAddress"

crystallizePassphrase=$(crystallize-getconf 'Passphrase')
export crystallizePassphrase

echo "Crystal address: $CrystalID"

if [ -e "$CrystalID" ]; then
    exit 1
fi
mkdir "$CrystalID"

echo "Getting crystal size..."

echo "File size item: https://archive.org/download/$CrystalID/$CrystalID.coal5"

crystalXzFileSize="$(curl -sIL "https://archive.org/download/$CrystalID/$CrystalID.coal5" | grep Content-Length | awk '{print $2}')"
crystalXzFileSize="${crystalXzFileSize::-2}"

echo "Receiving..."

wget -qO - "https://archive.org/download/$CrystalID/$CrystalID.coal5" | pv -tparbIfei 0.1 -s "$crystalXzFileSize" | gpg --yes --batch --passphrase-file "./$CrystalID.tmp" - | unxz --stdout - | tar -xvf - -C "./$CrystalID/"

if [[ $decrystallizeEasyUse == true ]]; then
    if [ -e "~/Decrystallized/"$CrystalID"" ]; then
        exit 1
    fi
    mv -v "$CrystalID" ~/Decrystallized/
    echo "Moved files for easy use"
fi

if [[ $decrystallizeHere == true ]]; then
    echo "Getting relative location..."
    crystallize-getconf 'Passphrase' > "./$CrystalLogID.tmp"
    wget "https://archive.org/download/$CrystalID/$CrystalID.coal5-cwd"
    mv "$CrystalID.coal5-cwd" "$CrystalID.tmp-cwd.gpg"
    gpg --yes --batch --passphrase-file "./$CrystalLogID.tmp" "$CrystalID.tmp-cwd.gpg"
    rm "./$CrystalLogID.tmp"
    crystalPath="$(cat "$CrystalID".tmp-cwd)"
    echo "Moving primary files into place (relative to $crystalPath)..."
    (
        shopt -s dotglob
        mv -v "$decrystallizedFolderName/$crystalPath/"* .
    )
    echo "Done moving primary files into place (relative to $crystalPath)."
fi
set +e

if rm -v "./$CrystalLogID.coal5-meta/$CrystalLogID.coal5-tend"; then
    if [[ $decrystallizeEasyUse == true ]]; then
        echo "Cleaning up with easy-use"
        if [[ $decrystallizeHere == true ]]; then
            echo "Here enabled"
            crystallize "./$CrystalLogID.coal5-meta" "$CrystalLogID" "$CrystalID.tmp-cwd" "$CrystalAddress"
        else
            echo "Here not enabled"
            crystallize "./$CrystalLogID.coal5-meta" "$CrystalLogID" "$CrystalAddress"
        fi
    else
        echo "Cleaning up with default mode"
        if [[ $decrystallizeHere == true ]]; then
            echo "Here enabled"
            crystallize "./$CrystalLogID.coal5-meta" "$CrystalLogID" "$CrystalID.tmp-cwd"
        else
            echo "Here not enabled"
            crystallize "./$CrystalLogID.coal5-meta"
        fi
    fi

    #Clear the screen
    printf "\033c"

    if [[ $decrystallizeHere == true ]]; then
        echo "Done! The crystal has been extracted to the current directory, $(pwd)."
    else
        echo "Done! The crystal has been extracted to:"
        if [[ $decrystallizeEasyUse == true ]]; then
            echo "$(pwd)/$CrystalAddress"
        else
            echo "$(pwd)/$CrystalLogID"
        fi
    fi
else

    #Clear the screen
    printf "\033c"

    echo "Decrystallisation failed! This is bad!"
    exit 1
fi
