#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

((EUID)) && exec sudo -- "$0" "$@"

sregDir=""
if [[ "$1" == "--sreg-dir" ]]; then
    shift
    sregDir="$1"
    shift
fi
sregDir="$(sregi_find_dir --sreg-dir "$sregDir" --full-check "$1")"

skipCount="0"
if [[ "$1" == "--skip" ]]; then
    shift
    skipCount="$1"
    shift
fi

finish() {
    if [[ -e "${fsckId:?}" ]]; then
        rm -r "${fsckId:?}" "/tmp/${fsckId:?}.status"
    fi
}
trap 'error-notify "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."; finish; exit 1' ERR

if [[ "$#" == "1" ]]; then
    # There's only one path specified, so use the current directory as the destination
    destinationParameter="."
    pathsToCopy=("${@}") # all arguments
else
    # Multiple paths are specified, so use the last one as the destination
    destinationParameter="${!#}" # last argument
    pathsToCopy=("${@:1:$(($#-1))}") # all but last argument
fi

if [[ -z "$destinationParameter" ]]; then
    destinationParameter="."
fi

for path in "${pathsToCopy[@]}"; do
    if [[ -d "$path" ]]; then
        destinationFindTarget="$destinationParameter/$(basename "$path")/"
        if [[ "$path" =~ '/'$ ]]; then
            destinationFindTarget="$destinationParameter/"
        fi
    else
        destinationFindTarget="$destinationParameter/$(basename "$path")"
    fi

    fsckId=".srpull-$(date-uuid)"
    fsckStatusFile="/tmp/$fsckId.status"

    itemCount="$(find "$destinationFindTarget" -type f -printf '.' | wc -c)"
    if [[ -d "$path" ]]; then
        # Add 1 to the item count to account for the target folder itself
        echo "$((itemCount + 1))" > "$fsckStatusFile"
    else
        echo "$itemCount" > "$fsckStatusFile"
    fi
one

finish
