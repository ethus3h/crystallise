#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

((EUID)) && exec sudo -- "$0" "$@"
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

# note that this may be overridden by parsing the limit argument later
cacheType="f"
if [[ "$1" == "--localstore" ]]; then
    cacheType="localstore"
    shift
elif [[ "$1" == "--scache" ]]; then
    cacheType="s"
    shift
fi

if [[ -e "$1"/.fcache.limit ]]; then
    exit 0
elif [[ -d "$1" ]]; then
    if ! isSubdirOf "$(crystallize-getconf WorkDirectory)" "$1"; then
        error-notify "Directory already exists and is not a cache directory."
        exit 1
    fi
fi

cacheLimit=""
if [[ "$2" == +([0-9]) ]]; then
    # The 2nd argument is a positive integer
    cacheLimit="$2"
else
    case $2 in
    s)
        cacheLimit=""
        [[ "$cacheType" == "localstore" ]] && die "--localstore was specified but scache default limit was requested."
        cacheType="s"
        ;;
    f)
        cacheLimit="5000000000"
        { [[ "$cacheType" == "localstore" ]] || [[ "$cacheType" == "s" ]]; } && die "--localstore or --scache was specified but fcache default limit was requested."
        cacheType="f"
        ;;
    localstore)
        cacheLimit="5000000000"
        [[ "$cacheType" == "scache" ]] && die "--scache was specified but localstorecache default limit was requested."
        cacheType="localstore"
        ;;
    *
        die "The 2nd argument must be either a positive integer or a cache type (s, f, or localstore)."
        ;;
    ;;
    esac
fi

mkdir -p "$1/ByCount"

echo "$cacheLimit" > "$1"/."$cacheType"cache.limit
echo "Done creating cache directory."
