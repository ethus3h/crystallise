#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

((EUID)) && exec sudo -- "$0" "$@"
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

sharedChecksCounter=0

printIfMatchingHashpointer() {
    local checksum="$1"
    local pointer="$2"

    local hashFromFile
    hashFromFile="$(tail -c +38 "$pointer" | head -c 129 | tr -d '\0')" || true

    sharedChecksCounter=$(( sharedChecksCounter + 1 ))
    (( sharedChecksCounter % 50 )) || printf '\e[2K\r%s' "Checked $sharedChecksCounter files..."

    [[ "$hashFromFile" == "$checksum" ]] && printf '\e[2K\n%s\n' "$pointer"
    return 0
}

if [[ "$1" == "--print-if-matching-hashpointer" ]]; then
    shift
    printIfMatchingHashpointer "$@"
    exit
fi

sregDir=""
if [[ "$1" == "--sreg-dir" ]]; then
    shift
    sregDir="$1"
    shift
fi
sregDir="$(sregi_find_dir --sreg-dir "$sregDir" --full-check)"

hashFull="$1"
if [[ "$(head -c 36 "$1" | tr -d '\0')" == "760fa662-89cf-4ebd-9664-150b7637ddd4" ]]; then
    # Hash pointer
    hashFull="$(sregi_hash_from_file "$1")"
    echo "(It looks like you provided a path to a hashpointer, so investigating its associated pointer.)"
fi
hashA="${hashFull:0:1}"
hashB="${hashFull:1:1}"
hashC="${hashFull:2:1}"

pointerLocation="$sregDir/$hashA/$hashB/$hashC/$hashFull"

pointerHash="$(sregi_hash_from_file "$pointerLocation")"
[[ "$hashFull" == "$pointerHash" ]] || die "Pointer hash ($hashFull) does not match the hash from the pointer at that location ($pointerHash)!"

echo "Pointer: $pointerHash"

print "Pointer type: "
    pointerTypeSignature="$(head -c 36 "$pointerLocation" | tr -d '\0')"
    if [[ "$pointerTypeSignature" == "760fa662-89cf-4ebd-9664-150b7637ddd4" ]]; then echo "Hash pointer ($pointerTypeSignature)?! Why is this in the stream database?"
    elif [[ "$pointerTypeSignature" == "a5e2f296-3085-49c0-8f48-24ea436b7a8b" ]]; then echo "Standard remote pointer ($pointerTypeSignature)"
    elif [[ "$pointerTypeSignature" == "c39f8657-384b-438b-a5a2-eece17147589" ]]; then echo "LocalStore pointer ($pointerTypeSignature)"
    elif [[ "$pointerTypeSignature" == "2fae2004-94bb-4aa8-a01a-fc44298efc2c" ]]; then echo "Remote pack pointer ($pointerTypeSignature)"
    elif [[ "$pointerTypeSignature" == "209fcfdf-d1ad-4345-8ef7-1fdc2d583d49" ]]; then echo "Remote pack pointer, with pointer data in the pointer ($pointerTypeSignature)"
    elif [[ "$pointerTypeSignature" == "45baff46-8db7-46f6-aad9-de5f713b02fe" ]]; then echo "URL pointer ($pointerTypeSignature)"
    else echo "Normal file (?!)"
    fi

print "Pointer reported size: "
timeout 15 sregi_get_length_from_pointer --sreg-dir "$sregDir" "$pointerLocation" 2>/dev/null || echo

print "Crystal ID for the pointer"\'"s data: "
crystallize-get-identifier-from-pointer "$pointerLocation" "$sregDir"

echo "List of referents (that you can read) in the current directory ($PWD):"

find . -path './.sreg' -prune -o -path './.egup.stat' -prune -o -type f -print0 | while IFS= read -rd '' fileNameToCheck; do
    printIfMatchingHashpointer "$pointerHash" "$fileNameToCheck"
done
printf '\e[2K\n'
