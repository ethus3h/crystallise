#!/bin/bash
# Accepts a pointer on stdin, and outputs the corresponding data from the stream cache.
set -e
# Does this really need root privileges?
[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"
# FIXME: The next line should not be necessary
source crystallize-bash_setup
if [[ "--disallow-hash-pointer" == "$1" ]]; then
    disallowHashPointer="true"
    shift
fi
crystalWorkdir=$(crystallize-getconf 'WorkDirectory')
streamId="biggify-stream-$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")"
dbDir="/Ember Library/Futuramerlin Projects/Data/Stream Registry/"
cd "$crystalWorkdir" || exit 1
mkdir "$streamId"
(
    cd "$streamId" || exit 1
    sponge "$streamId.xz"
    # Figure out what type of pointer it is
    pointerTypeSignature="$(head -c 36 "$streamId.xz")"
    if [[ "$pointerTypeSignature" == "a5e2f296-3085-49c0-8f48-24ea436b7a8b" ]]; then
        # Standard remote pointer
        tail -c +38 "$streamId.xz" | unxz --stdout - | tar -xf -
        decrystallize-pointer ./*.crystal &> /dev/null
        cp scache-*.tmp "$streamId.out"
    elif [[ "$pointerTypeSignature" == "c39f8657-384b-438b-a5a2-eece17147589" ]]; then
        # LocalStore pointer
        hashFull="$(tail -c +38 "$streamId.xz")"
        hashA="${hashFull:0:1}"
        hashB="${hashFull:1:1}"
        hashC="${hashFull:2:1}"
        unxz --stdout - < "$dbDir/LocalStore/$hashA/$hashB/$hashC/$hashFull" > "$streamId.out"
    elif [[ "$pointerTypeSignature" == "209fcfdf-d1ad-4345-8ef7-1fdc2d583d49" ]]; then
        # Remote pack pointer
        tail -c +167 "$streamId.xz" | unxz --stdout - | tar -xf -
        decrystallize-pointer ./*.crystal &> /dev/null
        hashFull="$(tail -c +38 "$streamId.xz" | head -c 129)"
        hashA="${hashFull:0:1}"
        hashB="${hashFull:1:1}"
        hashC="${hashFull:2:1}"
        unxz --stdout - < "$streamId/scache-"*".LocalStore/$hashA/$hashB/$hashC/$hashFull" > "$streamId.out"
    elif [[ "$pointerTypeSignature" == "760fa662-89cf-4ebd-9664-150b7637ddd4" ]]; then
        # Hash pointer
        if [[ "true" == "$disallowHashPointer" ]]; then
            error-die "The provided pointer is a hash pointer!"
        fi
        hashFull="$(tail -c +38 "$streamId.xz")"
        hashA="${hashFull:0:1}"
        hashB="${hashFull:1:1}"
        hashC="${hashFull:2:1}"
        scache_read_stream < "$dbDir/$hashA/$hashB/$hashC/$hashFull" > "$streamId.out"
        retrievedHash="$(sha512sum "$streamId.out" | awk '{print $1;}')"
        if [[ "$retrievedHash" != "$hashFull" ]]; then
            error-die "Checksum mismatch when retrieving the requested stream!"
        fi
    else
        error-die "Unknown pointer type signature! Either the file is corrupted, or this is a pointer version this version of scache_read_stream is familiar with, or this is not a pointer. Aborting."
    fi
    #retrievedHash="$(sha512sum "$streamId.out" | awk '{print $1;}')"
    #if [[ $retrievedHash == ]]
    cat "$streamId.out"
)
rm -r "$streamId"
