#!/bin/bash

set -o pipefail

error-die() {
    source error-notify "$@"
    exit 1
}
export -f error-die

rubberfs() {
    if [[ "$1" == "cd" ]]; then
        name="$2"
        if [ ! -n "$name" ]; then
            name="library"
        fi
        cd "/Wreathe/.Resources/RubberFS/$name/mount" || exit 1
    else
        "$(which rubberfs)" "$@"
    fi
}
export -f rubberfs

git-absolute-path () {
    fullpath="$(readlink -f "$1")"
    gitroot="$(git rev-parse --show-toplevel)" || return 1
    [[ $fullpath == *$(printf %q "$gitroot")* ]] && echo "${fullpath/$gitroot\//}"
}
export -f git-absolute-path

git-escape-path () {
    # (doesn't handle the case of the bash variable containing exactly one newline and that newline not being at the end)
    if [[ "$(wc -l <<< "$1")" == "1" ]] || [[ "$(wc -l <<< "$1")" == "0" ]]; then
        sed 's/./&\\/g' <<< "$1" | awk '{print "\\"$1}' | sed 's/.$//'
    else
        exit 1
    fi
}
export -f git-escape-path

qlstash () {
    while [[ ! -z "$1" ]]; do
        echo "Items remaining to qlstash: "
        echo "$@"
        fileToStash="$1"
        echo "Begun qlstashing $fileToStash."
        (
            targetFile="$(readlink -f "$1")"
            elen
            cd "$(dirname "$targetFile")" || exit 1
            rubberfs stash "$1"
            egup-exit
        )
        echo "Done qlstashing $fileToStash."
        shift
    done
    printf "\033c"
    echo "Done qlstashing all items."
}
export -f qlstash
