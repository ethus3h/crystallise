#!/bin/bash
source "$(which ember_bash_setup)" &> /dev/null

# Copy $1 into $2 and replace with pointers, skipping existing

[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"
trap 'error-die "A fatal error was reported on ${BASH_SOURCE} line ${LINENO}."' ERR
#set -x

if [ "$1" == "--no-verify" ]; then
    echo "(Not verifying pointers.)"
    sregNoVerify=true
    shift
fi
if ! [ -d "$2" ]; then
    error-die "Destination is not a directory."
fi
echo "Counting items..."
crystalWorkdir="$(crystallize-getconf 'WorkDirectory')"
fsckId="srsync-$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")"
mkdir -p "$crystalWorkdir/$fsckId"
fsckStatusFile="$crystalWorkdir/$fsckId/.srsync.status"
find "$1" -type f -printf '.' | wc -c > "$fsckStatusFile"
destinationRoot="$(dirname "$1")"
destinationRootLength=${#destinationRoot}
if [[ "$sregNoVerify" == "true" ]]; then
    find "$1" -type f -exec sregi_copy_write --no-verify {} "$2" "$fsckStatusFile" "$destinationRootLength" \;
else
    find "$1" -type f -exec sregi_copy_write {} "$2" "$fsckStatusFile" "$(dirname "$1")" "$destinationRootLength" \;
fi
rsync -a --ignore-existing --no-i-r "$1" "$2/"
find "$2/$(basename "$1")" -type d -empty -exec touch {}/.keep \;
