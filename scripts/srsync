#!/bin/bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null

# Copy $1 into $2 and replace with pointers, skipping existing

((EUID)) && exec sudo -- "$0" "$@"
trap 'error-die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."' ERR
#set -x

sregNoVerify=true
if [[ "$1" == "--no-verify" ]]; then
    shift
fi
if [[ "$1" == "--verify" ]]; then
    sregNoVerify=false
    shift
fi
if [[ "$sregNoVerify" == "true" ]]; then
    echo "(Not verifying pointers: use sreg_fsck to test the entire stream registry.)"
fi
if ! [[ -d "$2" ]]; then
    error-die "Destination is not a directory."
fi
echo "Counting items..."
crystalWorkdir="$(crystallize-getconf 'WorkDirectory')"
fsckId="srsync-$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")"
mkdir -p "$crystalWorkdir/$fsckId"
fsckStatusFile="$crystalWorkdir/$fsckId/.srsync.status"
find "$1" -type f -printf '.' | wc -c > "$fsckStatusFile"
if [[ "$1" =~ '/'$ ]]; then
    destinationRoot="$1"
    destinationFindTarget="$2/"
else
    destinationRoot="$(dirname "$1")"
    destinationFindTarget="$2/$(basename "$1")/"
fi
if [[ "$destinationRoot" == "." ]]; then
    destinationRootLength="0"
else
    destinationRootLength=${#destinationRoot}
fi
if [[ "$sregNoVerify" == "true" ]]; then
    find "$1" -type f -exec sregi_copy_write --no-verify {} "$2" "$fsckStatusFile" "$destinationRootLength" \;
else
    find "$1" -type f -exec sregi_copy_write {} "$2" "$fsckStatusFile" "$destinationRootLength" \;
fi
rsync -a --ignore-existing --no-i-r "$1" "$2/"
find "$destinationFindTarget" -type d -empty -exec touch {}/.keep \;
