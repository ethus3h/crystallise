#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

((EUID)) && exec sudo -- "$0" "$@"

function finish() {
    if [[ -e "${streamId:?}" ]]; then
        rm -r "${streamId:?}" "/tmp/${fsckId:?}"
    fi
}
trap 'error-notify "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."; finish; exit 1' ERR

sregVerify=""
if [[ "$1" == "--verify" ]]; then
    sregVerify="--verify"
    shift
fi

dropUnused="false"
if [[ "$1" == "--drop-unused" ]]; then
    dropUnused="true"
    shift
fi

folderToCheck="$1"
if [[ -z "$folderToCheck" ]]; then
    action="."
fi

echo "Counting items..."
crystalWorkdir="$(crystallize-getconf WorkDirectory)"
fsckId="sreg_folder_check-$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")"
mkdir -p "$crystalWorkdir/${fsckId:?}"
mkdir -p "/tmp/${fsckId:?}"
fsckStatusFile="/tmp/$fsckId/.sreg_folder_check.status"
fsckIdList="/tmp/$fsckId/.sreg_folder_check.idlist"
find "$folderToCheck" -type f -printf '.' | wc -c > "$fsckStatusFile"
bpid="$$"
find "$folderToCheck" -type f \( -exec sregi_hashpointer_sane {} "$fsckIdList" "$fsckStatusFile" "$sregVerify" \; -or -exec kill "-$bpid" \; \)

if [[ "$dropUnused" == "false" ]]; then
    finish
    exit 0
fi

find "${EmberLibrary:?}/Futuramerlin Projects/Data/Stream Registry" -not -path "${EmberLibrary:?}/Futuramerlin Projects/Data/Stream Registry/Unused Pointers/*" -type f -printf '.' | wc -c > "$fsckStatusFile"
echo "0" > "$fsckStatusFile.done"

find "${EmberLibrary:?}/Futuramerlin Projects/Data/Stream Registry" -not -path "${EmberLibrary:?}/Futuramerlin Projects/Data/Stream Registry/Unused Pointers/*" -type f \( -exec sregi_drop_single_unused {} "$fsckIdList" "$fsckStatusFile" \; -or -exec kill "-$bpid" \; \)

finish
