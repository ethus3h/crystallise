#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

((EUID)) && exec sudo -- "$0" "$@"
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

dbDir="$1"

if [[ -e "$dbDir/.locked" ]]; then
    warn "This sregi_fuse temporary folder is already in use. If the sregi_fuse_cache_gc instance using it has crashed, remove $dbDir/.locked manually."
    exit 0
fi
echo "locked on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)" > "$dbDir/.locked"

finish() {
    rm -f "${dbDir:?}/.locked"
}
trap finish EXIT

# Remove the least-used items from the cache until it fits within the alloted disk space
diskUsageLimit="1500000000" # 1.5GB
diskUsageLimitSub=$(( diskUsageLimit - 1000000000 )) # 500MB
if [[ "$(du -sb "$dbDir" | awk '{print $1;}')" -gt "$diskUsageLimit" ]]; then
    while [[ "$(du -sb "$dbDir" | awk '{print $1;}')" -gt "$diskUsageLimitSub" ]]; do
        # Remove the largest item from the cache
        largestLeastUsedItem="$(find "$dbDir" -type f -not -path "$dbDir/.locked" -printf "%s\\t%p\\n" | sort -V | tail -1 | awk '{print $2;}')"
        if [[ -n "$largestLeastUsedItem" ]]; then
            rm -f "${largestLeastUsedItem:?}"
        fi
    done
    find "$dbDir" -mindepth 1 -type d -empty -delete
fi

rm "$dbDir/.locked"
