#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

((EUID)) && exec sudo -- "$0" "$@"
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."' ERR

fail() {
    if [[ "$dropFailed" == "true" ]]; then
        dbDir="${EmberLibrary:?}"/Futuramerlin\ Projects/Data/Stream\ Registry/Failed\ Fsck/
        mkdir -p "$dbDir"
        mv "$1" "$dbDir/"
        die "Error verifying stream registry database entry $knownHash! Marking entry as corrupted."
    fi
    die "Error verifying stream registry database entry $knownHash!"
}

if [[ "--quick" == "$3" ]]; then
    quick="true"
    shift
fi

skipCache=""
dropFailed="false"
if [[ "--skip-cache" == "$3" ]]; then
    skipCache="--skip-cache"
fi
if [[ "--skip-drop-failed" == "$3" ]]; then
    skipCache="--skip-cache"
    dropFailed="true"
fi
if [[ "--drop-failed" == "$3" ]]; then
    dropFailed="true"
fi

fsckStatusFile="$2"
knownHash="(Failed to retrieve entry hash!)"
knownHashTemp="$(sregi_hash_from_file "$1")" || fail "$1"
if [[ -n "$knownHashTemp" ]]; then
    knownHash="$knownHashTemp"
fi
echo "Started verifying stream registry database entry $knownHash."

exitCode=""
if [[ "$quick" == "true" ]]; then
    sregi_verify_entry "$1"
    exitCode="$?"
else
    sreg_read_stream --entry-path "$1" --checksum "$knownHash" --disallow-hash-pointer "$skipCache" < "$1" > /dev/null
    exitCode="$?"
fi

if [[ "$exitCode" == "0" ]]; then
    if [[ -n "$fsckStatusFile" ]]; then
        numberExpected="$(<"$fsckStatusFile")"
        numberProcessedFile="$fsckStatusFile.done"
        if ! [[ -f "$numberProcessedFile" ]]; then
            numberProcessed="1"
        else
            numberProcessed="$(<"$numberProcessedFile")"
            numberProcessed=$(( numberProcessed + 1 ))
        fi
        echo "$numberProcessed" > "$numberProcessedFile"
        if [[ "$numberExpected" == "0" ]]; then
            numberExpected="-1"
        fi
        numberProcessedPercentage="$(printf "%.3f\\n" "$(bc -l <<< "($numberProcessed / $numberExpected) * 100")")"
        echo "Verified stream registry database entry $knownHash: finished #$numberProcessed of $numberExpected ($numberProcessedPercentage%)"
    else
        echo "Verified stream registry database entry $knownHash."
    fi
    exit
else
    fail "$1"
fi
