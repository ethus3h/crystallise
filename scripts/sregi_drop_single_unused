#!/usr/bin/env emberPlatformResolver-bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

((EUID)) && exec sudo -- "$0" "$@"
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."' ERR

failCheckFile="$1"
if [[ -e "$failCheckFile" ]]; then
    warn "A previous invocation of $0 failed with the message \"$(<"$failCheckFile")\"! Aborting."
else
    echo "$0 running in $(readlink -f "$(pwd)") with the arguments $*" > "$failCheckFile" || echo "$0 running in an unknown directory with the arguments $*" > "$failCheckFile"
fi
shift
success() {
    rm -f "${failCheckFile:?}"
    exit 0
}

sregDir=""
if [[ "$1" == "--sreg-dir" ]]; then
    shift
    sregDir="$1"
    shift
fi

fsckIdList="$2"
pointerId="$(basename "$1")"
fsckStatusFile="$3"

if [[ -n "$fsckStatusFile" ]]; then
    numberExpected="$(<"$fsckStatusFile")"
    numberProcessedFile="$fsckStatusFile.done"
    if ! [[ -f "$numberProcessedFile" ]]; then
        numberProcessed="0"
    else
        numberProcessed="$(<"$numberProcessedFile")"
        numberProcessed=$(( numberProcessed + 1 ))
    fi
    echo "$numberProcessed" > "$numberProcessedFile"
    if [[ "$numberExpected" == "0" ]]; then
        numberExpected="-1"
    fi
    numberProcessedPercentage="$(printf "%.3f\\n" "$(bc -l <<< "($numberProcessed / $numberExpected) * 100")")"
    echo "Considering item $pointerId: #$numberProcessed of $numberExpected ($numberProcessedPercentage%)"
fi

if [[ ! -e "$2" ]]; then
    die "Could not read ID list!"
fi
pointerDir="$(sregi_find_dir --sreg-dir "$sregDir")/Unused Pointers"
mkdir -p "$pointerDir"
grep -Fxq "$pointerId" "$fsckIdList" || { mv "$1" "$pointerDir"; echo "Dropped unused stream $pointerId"; }

success
