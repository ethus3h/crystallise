#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

shopt -s extglob

#Remove URL
CrystalAddress="${1#https://archive.org/@(details|download)/}"
#Remove trailing path(s) from identifier
CrystalAddress="${CrystalAddress%%/*}"

if [[ "$CrystalAddress" == "" ]]; then
    echo "Please specify an item to retrieve."
    exit 1
fi

dateNowLiquify="$(date +%Y-%m-%d-%H-%M-%S-%N)"

mkdir "$CrystalAddress-dequicklified-$dateNowLiquify"
cd "$CrystalAddress-dequicklified-$dateNowLiquify" || die "Failed to cd!"
postUploadCheckSuccess=""
postUploadCheckFailHandler() {
    if [[ -z "$postUploadCheckSuccess" ]] || [[ "$postUploadCheckSuccess" == "1" ]]; then
        postUploadCheckSuccess=1
    else
        postUploadCheckSuccess=0
    fi
}
getChecksumRetries=0
retryDelayTime=5
until [[ "$getChecksumRetries" -ge 5 ]]; do
    CrystalID="${requestUrl%.coal5}"
    CrystalID="${CrystalID#https:\/\/archive.org\/download\/}"
    CrystalID="${CrystalID%%\/*}"
    if checksumLine="$(ia downloadAsStream https://archive.org/download/"$CrystalID/$CrystalID"_files.xml | grep -F -A 6 "<file name=\"$CrystalID.coal5\" source=\"original\">" | grep "<sha1>" | head -n 1)"; then
        postUploadCheckFailHandler
        break
    fi
    getChecksumRetries=$((getChecksumRetries+1))
    sleep "$retryDelayTime"
    if [[ "$retryDelayTime" -lt 30 ]]; then
        retryDelayTime=$((retryDelayTime + 5))
    fi
done
tempLocation="$(date-uuid)"
mv "$CrystalAddress" "$tempLocation"
mkdir -p "archive.org/download/$CrystalAddress/"
shopt -s dotglob
mv "$tempLocation"/* "archive.org/download/$CrystalAddress/"
wget --mirror --no-parent -e robots=off "https://archive.org/download/$CrystalAddress/"
