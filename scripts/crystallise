#!/bin/bash
# Crystallise
# Version:
export crystalliseVersion='2.14'

[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"

#Script should exit if any operation fails.
set -e

if [ "$1" == "" ] || [ "$1" == "." ] || [ "$1" == ".." ] || [ "$1" == "./" ] || [[ "$1" =~ ^../ ]]; then
    echo "Please specify file(s) within the current directory to crystallise when using relative path names."
    exit 1
fi

#Remove first argument if it's the end-of-options delimiter
if [ "$1" == "--" ]; then
    shift
fi

    echo "### WARNING! ### WARNING! ### WARNING! ### WARNING! ### WARNING! ###"
    echo "Be careful that you don't crystallise your current working directory!"
    echo "Also don't crystallise the crystallise scripts themselves. Either"
    echo "could cause problems. Continuing in 10 seconds; press Ctrl+C to cancel."
    echo "### WARNING! ^^^ WARNING! ### WARNING! ### WARNING! ^^^ WARNING! ###"
    sleep 10

crystalWorkdir=$(crystallise-getconf 'WorkDirectory')
export crystalWorkdir
mkdir -p "$crystalWorkdir"

CrystalID=$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")-$(python -c 'import uuid; print str(uuid.uuid4())')
export CrystalID

crystallise-logsession "$CrystalID" "$@" 2>&1 | tee -a "$crystalWorkdir/$CrystalID"

echo "Working..."
#Script should not exit if an operation fails.
set +e
xz -C sha256 -v -9 -e "$crystalWorkdir/$CrystalID"
xz -C sha256 -v -9 -e -k "$crystalWorkdir/$CrystalID.time-done.warc.gz"
xz -C sha256 -v -9 -e "$crystalWorkdir/$CrystalID.local.idx"
xz -C sha256 -v -9 -e "$crystalWorkdir/$CrystalID.deep.idx"
rsync -av --progress --checksum "$crystalWorkdir/$CrystalID".xz /Ember\ Media\ Library/Futuramerlin\ Projects/Data/Crystal\ Index/"$CrystalID".log.xz
gpg --yes -c -v --cipher-algo AES256 --batch --passphrase-file "$crystalWorkdir/$CrystalID".tmp "$crystalWorkdir/$CrystalID.xz"
gpg --yes -c -v --cipher-algo AES256 --batch --passphrase-file "$crystalWorkdir/$CrystalID".tmp "$crystalWorkdir/$CrystalID.time-done.warc.gz.xz"
gpg --yes -c -v --cipher-algo AES256 --batch --passphrase-file "$crystalWorkdir/$CrystalID".tmp "$crystalWorkdir/$CrystalID.local.idx.xz"
gpg --yes -c -v --cipher-algo AES256 --batch --passphrase-file "$crystalWorkdir/$CrystalID".tmp "$crystalWorkdir/$CrystalID.deep.idx.xz"
rm -v "$crystalWorkdir/$CrystalID.tmp"
mv -v "$crystalWorkdir/$CrystalID.xz.gpg" "$crystalWorkdir/$CrystalID.coal5-log"
mv -v "$crystalWorkdir/$CrystalID.time-done.warc.gz.xz.gpg" "$crystalWorkdir/$CrystalID.coal5-timestamp"
mv -v "$crystalWorkdir/$CrystalID.local.idx.xz.gpg" "$crystalWorkdir/$CrystalID.coal5-idx-l"
mv -v "$crystalWorkdir/$CrystalID.deep.idx.xz.gpg" "$crystalWorkdir/$CrystalID.coal5-idx-d"
ia upload "$CrystalID" --retries=100 --verify --delete "$crystalWorkdir/$CrystalID.coal5-log" "$crystalWorkdir/$CrystalID.coal5-idx-l" "$crystalWorkdir/$CrystalID.coal5-idx-d"
ia upload "$CrystalID" --retries=100 --verify "$crystalWorkdir/$CrystalID.coal5-timestamp"

if rm -v "$crystalWorkdir/$CrystalID.coal5-timestamp"; then
    #Clear the screen
    printf "\033c"

    echo "Done! The new crystal's address is:"
    echo "$CrystalID"
else
    #Clear the screen
    printf "\033c"

    echo "Crystallisation failed! This is bad!"
    exit 1
fi
