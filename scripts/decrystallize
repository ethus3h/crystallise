#!/bin/bash
# Usage: decrystallize <crystal-address>

set -e
[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"

shopt -s extglob

#Remove URL
CrystalAddress="${1#https://archive.org/@(details|download)/}"
#Remove trailing path(s) from identifier
CrystalAddress="${CrystalAddress%%/*}"
CrystalAddress="${CrystalAddress%\.coal5*}"

if [ "$CrystalAddress" == "" ]; then
    echo "Please specify a crystal address to unpack."
    exit 1
fi

CrystalID="$CrystalAddress"

echo "Crystal address: $CrystalID"

if [ -e "$CrystalID" ] || [ -e "$CrystalID.tmp" ]; then
    exit 1
fi
mkdir "$CrystalID"

crystalXzFileSize="$(curl -sIL "https://archive.org/download/$CrystalID/$CrystalID.coal5" | grep Content-Length | awk '{print $2}')"
crystalXzFileSize="${crystalXzFileSize::-2}"

crystallize-getconf 'Passphrase' > "$CrystalID.tmp"

wget -qO - "https://archive.org/download/$CrystalID/$CrystalID.coal5" | pv -tparbIfei 0.1 -s "$crystalXzFileSize" | gpg --yes --batch --passphrase-file "$CrystalID.tmp" - | unxz --stdout - | tar -xvf - -C "$CrystalID/"

echo "Getting relative location..."
wget "https://archive.org/download/$CrystalID/$CrystalID.coal5-cwd"
mv "$CrystalID.coal5-cwd" "$CrystalID.tmp-cwd.gpg"
gpg --yes --batch --passphrase-file "$CrystalID.tmp" "$CrystalID.tmp-cwd.gpg"
crystalPath="$(cat "$CrystalID".tmp-cwd)"
rm "$CrystalID.tmp" "$CrystalID.tmp-cwd"
mv "$CrystalID" "$CrystalID.tmp"
echo "Moving primary files into place (relative to $crystalPath)..."
(
    shopt -s dotglob
    mv -v "$CrystalID.tmp/$crystalPath/"* .
)
echo "Done moving primary files into place (relative to $crystalPath)."

printf "\033c"
echo "Done! The crystal has been extracted to the current directory, $(pwd)."
