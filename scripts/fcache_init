#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

((EUID)) && exec sudo -- "$0" "$@"
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

cacheType="f"
cacheLimit="5000000000"
if [[ "$1" == "--localstore" ]]; then
    cacheType="localstore"
    cacheLimit="5000000000"
    shift
elif [[ "$1" == "--s" ]]; then
    cacheType="s"
    cacheLimit="5000000000"
    shift
elif [[ "$1" == "--f" ]]; then
    shift
fi

if [[ -e "$1"/."$cacheType"cache.limit ]]; then
    cacheLimit="$(<"$1"/."$cacheType"cache.limit)"
    if [[ -z "$cacheLimit" ]]; then
        true # The limit file is empty, so keep going and thereby update it
    else
        isNonnegativeInteger "$cacheLimit" || die "A disk usage limit, $cacheLimit, is configured, but it is not a nonnegative integer!"
        exit 0
    fi
elif [[ -d "$1" ]]; then
    if ! isSubdirOf "$(crystallize-getconf WorkDirectory)" "$1"; then
        error-notify "Directory already exists and is not a cache directory."
        exit 1
    fi
fi

if isNonnegativeInteger "$2"; then
    # The 2nd argument is a positive integer
    cacheLimit="$2"
elif [[ -z "$2" ]]; then
    # No 2nd argument was given, so leave default cache limit
    true
else
    die "If given, the 2nd argument to fcache_init must be a nonnegative integer."
fi

mkdir -p "$1/ByCount"

assert true isNonnegativeInteger "$cacheLimit"

echo "$cacheLimit" > "$1"/."$cacheType"cache.limit
echo "Done creating cache directory."
